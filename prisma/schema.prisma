// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  admin
  user
}

model Teacher {
  id      String            @id @default(uuid())
  name    String
  slug    String            @unique
  url     String
  contact Contact?
  courses TeacherOnCourse[]
}

model Contact {
  id          String  @id @default(uuid())
  urlLinkedin String
  urlGmail    String
  teacher     Teacher @relation(fields: [teacherId], references: [id])
  teacherId   String  @unique
}

model Course {
  id       String            @id @default(uuid())
  name     String
  teachers TeacherOnCourse[]
  filters  Filter[]
}

model Cycle {
  id      String   @id @default(uuid())
  name    String
  filters Filter[]
}

model Faculty {
  id      String   @id @default(uuid())
  name    String
  careers Career[]
}

model Career {
  id        String   @id @default(uuid())
  name      String
  faculty   Faculty  @relation(fields: [facultyId], references: [id])
  facultyId String
  filters   Filter[]
}

model TeacherOnCourse {
  teacher   Teacher @relation(fields: [teacherId], references: [id])
  teacherId String
  course    Course  @relation(fields: [courseId], references: [id])
  courseId  String

  @@id([teacherId, courseId])
}

model Filter {
  id       String @id @default(uuid())
  course   Course @relation(fields: [courseId], references: [id])
  courseId String
  career   Career @relation(fields: [careerId], references: [id])
  careerId String
  cycle    Cycle  @relation(fields: [cycleId], references: [id])
  cycleId  String
}

model User {
  id            String    @id @default(uuid())
  name          String
  email         String    @unique
  emailVerified DateTime?
  password      String
  role          Role   @default(user)
  image         String?
}
